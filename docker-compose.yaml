version: '3.8'

services:
  api:
    build: ./ecommerce
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./ecommerce:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend

  worker:
    build: ./ecommerce
    ports:
      - 8001:8000
    env_file:
      - .env
    depends_on:
      - redis
      - db
    networks:
      - backend
    command: celery -A ecommerce worker -l info

  db:
    image: postgres:14-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge
